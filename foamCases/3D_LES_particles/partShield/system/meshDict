/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                |
| \\      /  F ield         | cfMesh: A library for mesh generation          | 
|  \\    /   O peration     |                                                |
|   \\  /    A nd           | Author: Franjo Juretic                         | 
|    \\/     M anipulation  | E-mail: franjo.juretic@c-fields.com            |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version   2.0;
    format    ascii;
    class     dictionary;
    location  "system";
    object    meshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Guidance: https://www.cfd-online.com/Forums/openfoam-community-contributions/198872-general-workflow-create-flawless-mesh-cfmesh.html

surfaceFile         "combined.fms";

// global values for cartesianMesh
maxCellSize	       17.697; // good paramaters: 17.697 > 17.295 (but not values between)
//boundaryCellSize    6.0; // similar quality to region refinement (when used instead)
//minCellSize           6.0;

// region (local) refinement
objectRefinements
{  
    headRefine
    {
        type        box;
        cellSize    6.0; // Mesh OK: [4.5:8.5] (significant no. bad cells outside range)
        centre      (0 0 0);
        lengthX     200;
        lengthY     250;
        lengthZ     300;
    }

    noseRefine
    {
        type        box;
        cellSize    1.0; 
        centre      (0 69 30);
        lengthX     42; // vary lengths to achieve mesh 'convergence'
        lengthY     42;
        lengthZ     42;
    }
}

/*boundaryLayers
{
    nLayers     1;

}*/

workflowControls
{
    //stopAfter         edgeExtraction;
}

renameBoundary
{
    defaultType     wall;

    newPatchNames
    {
        "top"       { newName interfaceShield  ; type  patch; }
        "bottom"    { newName interfaceShield  ; type  patch; }
        "sideL"     { newName interfaceShield  ; type  patch; }
        "sideR"     { newName interfaceShield  ; type  patch; }
        "front"     { newName interfaceShield  ; type  patch; }
        "back"      { newName atmos      ; type  patch; }
    }
}

// ************************************************************************* //